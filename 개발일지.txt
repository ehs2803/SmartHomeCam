2022.03.27.일
- 앱 mainpage 만들기
- mainpage url 메핑, views.landing 작성, index.html 연결
- main page templage 선정 : https://startbootstrap.com/theme/one-page-wonder
- 오류1 : css, js, img를 찾지 못했음.
(해결방법)
{% load static %}
src="assets/mainpage/img/03.jpg" -> src="{% static 'assets/mainpage/img/03.jpg' %}"


==================================================================================
2022.03.29.화
- setting에 mysql 설정 후 "python manage.py migrate"하면 mysql workbench에 테이블 자동으로 생김.
- "python manage.py inspectdb" -> model에 복사 ->  "python manage.py makemigrations" -> "python manage.py migrate"
- 회원가입 테스트함.
- 오류1 : 데이터베이스에 가입 시간이 미국시간으로 들어감.
(해결방법)
[setting.py]
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Seoul'
USE_I18N = True
USE_L10N = True
USE_TZ = False

[model.py]
    created_at = models.DateTimeField(auto_now_add=True)

    @property
    def created_at_korean_time(self):
        korean_timezone = timezone(settings.TIME_ZONE)
        return self.created_at.astimezone(korean_timezone)
위 코드를 통해 해결함.

==================================================================================
2022.03.30.수
- mypage app 만들기
- mypage template bootstrap 적용(startbootstrap-simple-sidebar-gh-pages)

==================================================================================
2022.03.31.목
- 로그인, 회원가입 페이지 새로운 template 적용(startbootstrap-sb-admin-gh-pages)
- sueprvisor 앱 만들기

==================================================================================
2022.04.01.금
- 마이페이지 새로운 template 적용(startbootstrap-sb-admin-gh-pages)
- 기능선택 페이지, 운전자모드, 공부모드 페이지 만들어서 연결 -> template은 꾸미지는 않음.

==================================================================================
2022.04.02.토
- socket.py, frame.py 만들어 study.html, drive.html에 로컬에서 RP.py 연결해서 웹캠화면이 html상에 뜨는거 까지 개발 완료.

==================================================================================
2022.04.04.월
- mypage에서 chart 사이트로 이동하는거 구현. sidebar가 정상적으로 유지되면서 chart 사이트로 이동됨.
- face login html 만들어봄. html은 완성함. js 코드를 통해 webcam 불러오기, 이미지 캡쳐 완성.

==================================================================================
2022.04.15.금
- smartsupervisor -> smarthomecam 버전으로 바꾸기
- homecam app 만들기
- index.html 만들기 완성. ppt로 디자인 만들어서 이미지 버튼 만들기.
- basic.html, pet.html 만들어서 매핑함.

==================================================================================
2022.04.17.일
- 다중 ajax 성공
- 로컬 노트북 카메라 연결 성공
- videocamera 객체 싱글톤 생성 성공

==================================================================================
2022.04.19.화
- run_server 스레드 적용
- username기반 img src 적용
- username기반으로 소켓 연결
- html에서 소켓 연결여부 ajax 통신으로 로딩화면 표시, 숨김 개발

==================================================================================
2022.04.21.목
- Client 객체만들기
- 소켓통신 연결되면 스레드 사용해 서버에서 프레임 계속 받아옴
- 연결끓기 버튼 구현 성공.
(위 모든 사항에 대해 한개에 대한 연결만 성공. 다중 연결은 추후 구현 예정)

==================================================================================
2022.04.23.토
- 동적 버튼 생성 조사
- 동적 버튼에 이벤트 넣기 조사 및 일부 테스트.

==================================================================================
2022.04.24.일
- 페이지 새로고침 없이 버튼 만으로 img src 변경해 영상 전환하는거 테스트 결과 불가능...
- 초기 페이지에 인덱스 페이지(전체적인 상황 볼 수 있는 페이지)에 동적으로 버튼 만들어 클릭하면 해당페이지 보이게... url 매핑 필요

==================================================================================
2022.04.26.화
- 인덱스 페이지에서 버튼만들어 새로운 창 띄우는거 테스트 성공.

==================================================================================
2022.04.27.수
- 인덱스 페이지에서 버튼 누르면 url 매핑되서 username/id로 가서 실시간 스트리밍 볼 수 있음.

==================================================================================
2022.04.28.목
- ajax 통해서 username의 id rp 연결 유무 확인가능.
- capture, video_recording 도 틀 만듬.

==================================================================================
2022.04.29.금
- 얼굴탐지를 어떤 모듈을 가지고할지 테스트함. opencv-dnn 방식으로 하기로함. 테스트 결과 다른 모델의 경우 버벅거림, 정확도가 낮음.
opencv-dnn의 경우 버벅거림 없이 사람얼굴을 잘 인식함.
- 가족 등록 기능을 위한 mysql 테이블 family 만듬. superuser 계정만들어서 실험해봄. 정상적으로 custom한 경로로 이미지 들어감.
- 이미지 이름 중복의 경우 django 내부에서 알아서 처리해줌.
- 가족 등록 기능을 위한 view만듬. htm은 만들기만하고 내부 내용은 채워야함.

==================================================================================
2022.04.30.토
- 가족멤버 사진이 로딩이 안됨.
->main이 되는 url.py에 + url설정을 해주어야함. mysql의 경우 sqlite3와 다르게 이미지 파일을 넣을 때 longtext를 사용해야함.
longblob을 사용해서 계속 바이너리 값을 읽어서 object.url을 못해서 사진을 못 읽었음.
-위 사항으로 시간 소요를 많이함.
- 등록한 가족 멤버 목록(사진, 이름) 보이는거 성공.
- 목록에서 특정 멤버선택시 detail 페이지 만들어 놓기만함.
- 멤버 등록 html 연결시켜둠.

==================================================================================
2022.05.01.일
- 가족멤버 html로 등록하는거 성공. 중간에 등록에 문제가 생겼음.
-> uid를 설정하는 과정에서 user를 얻어오는 과정에서
if request.session.get('id'):                                    
    user = AuthUser.objects.get(pk=request.session.get('id')) 
if request.session.get('id'):
    user = User.objects.get(id=request.session.get('id'))
위 두가지 방법 중 위에 방법으로 user를 불러와서 uid 필드에 저장해야함.
- 가족멤버 상세 페이지 만듬. 상세 정보 보여질 수 있게 했음.
- 가족등록, 상세 페이지 디자인은 안함.

==================================================================================
2022.05.02.월
- 가족멤버 info 사진 크기 조절
- 가족멤버 등록 form 페이지 일부 디자인
- mypate html에서 navbar.html, footer.html 분리
- 가족멤버 상세페이지에서 부트스트랩 적용해서 멤버사진 버튼으로 옆으로 슬라이드 형태로 넘길 수 있음.

==================================================================================
2022.05.05.목
- 가족멤버 정보수정 html만듬. view.py 추가 개발 필요.
- 가족멤버 삭제 기능 구현 완료.

==================================================================================
2022.05.06.금
- 가족멤버 수정 view.py 구현완료 -> 정보 수정 테스트 완료

==================================================================================
2022.05.07.토
- opencv-dnn 기반 얼굴인식 서버에 적용 성공. -> 다만 속도가 매우 느려짐.

==================================================================================
2022.05.08.일
- 캡처 기능 구현함. 사용자가 캡처하기 버튼 누르면 캡처 저장됨.

CREATE TABLE `capture_picture` (
  `cpid` int NOT NULL AUTO_INCREMENT,
  `uid` int NOT NULL,
  `image` longtext COLLATE utf8_unicode_ci NOT NULL,
  `time` timestamp default current_timestamp,
  PRIMARY KEY (`cpid`),
  CONSTRAINT `cp_ibfk_1` FOREIGN KEY (`uid`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_unicode_ci

- 위 테이블을 데이터베이스에 만듬.

==================================================================================
2022.05.10.화
- 녹화 기능을 위한 테이블 만듬.

==================================================================================
2022.05.11.수
- yolo v4 tiny 사람, 강아지, 고양이 테스트 완료
- aws sns - sms 보내는거 성공. 다만 리전이 서울에서 sms지원이 않되서 일본 도쿄리전으로 설정한 경우 샌드박스에 미리 전화번호를 등록해야함.
- face recognition을 위한 landmark를 위해 face detection을 opencv말고 dlib(hog)로 테스토해봄. 
- 파이썬 코드에서 이메일 보내는거 성공. gmail 로 송신함. 보낼 때 html 기반으로 사진 전송도 성공함.